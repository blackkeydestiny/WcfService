<?xml version="1.0" encoding="utf-8"?>
<configuration>
  <startup>
    <supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.5.2" />
  </startup>


  <!--
      IIS寄宿
      1、创建.svc文件（CalculatorService.svc），文件内容：<%@ ServiceHost Service="Service.CalculatorService" %>
         属性Service的值：服务的全名（命名空间+类型名称）
      2、创建Web应用，寄宿在IIS下的WCF服务其实是一个Web应用，所以通过IIS管理器为寄宿的服务创建一个Web应用，
         在这里我们直接在本地创建一个Web应用并起名为WcfServices,将物理路径映射为Service项目的根目录
      3、由于服务调用是通过访问对应的.svc文件来实现的，这个.svc文件所在的地址对于客户端来说就是服务（终结点）地址，所以这里
         不需要配置终结点的Address属性.
      4、服务行为的ServiceMetadataBehavior也没有指定获取元数据的发布地址，但是可以通过 ： 发布到IIS上的web站点+CalculatorService.svc？wsdl
         得到服务元数据的WSDL文件 ： http://192.168.0.150:8012/CalculatorService.svc?WSDL
      5、客户端只需要更改Address值就OK
      6、用于激活服务实例的.SVC文件在WCF 4.0中可以省略。WCF将通过.SVC文件体现的请求地址和服务之间的映射关系放到了配置文件中
  -->
  
  <!-- 配置终结点和服务行为 -->
  <system.serviceModel>
    <!-- 服务行为 -->
    <behaviors>
      <serviceBehaviors>
        <behavior name="metadataBehavior">
          <serviceMetadata httpGetEnabled="true" />
        </behavior>
      </serviceBehaviors>
    </behaviors>
    <!-- 终结点 -->
    <services>
      <service name="Service.CalculatorService" behaviorConfiguration="metadataBehavior">
        <endpoint binding="wsHttpBinding" contract="Service.Interface.ICalculator" />
      </service>
    </services>
  </system.serviceModel>
    <system.webServer>
        <directoryBrowse enabled="true" />
    </system.webServer>

</configuration>